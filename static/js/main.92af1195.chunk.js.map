{"version":3,"sources":["config/constants.js","main/index.js","product/index.js","upload/index.js","include/header.js","include/footer.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","MainPage","useState","products","setProducts","banners","setBanners","useEffect","axios","get","then","result","data","product","console","log","catch","error","autoplay","autoplaySpeed","map","banner","index","to","href","id","src","imageUrl","alt","className","class","name","price","seller","moment","createdAt","format","ProductPage","setProduct","useParams","description","UploadPage","history","useHistory","setImageUrl","onFinish","values","post","parseInt","replace","Item","label","action","listType","showUploadList","onChange","info","file","status","response","rules","required","message","size","placeholder","TextArea","htmlType","Header","onClick","push","icon","DownloadOutlined","Footer","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92af1195.chunk.js","sourcesContent":["export const API_URL = process.env.NODE_ENV === 'production'\r\n    ? \"https://greenreact-server.herokuapp.com/\"\r\n    : \"http://localhost:8080\";\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport './index.scss';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { API_URL } from '../config/constants';\r\nimport { Carousel } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst MainPage = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [banners, setBanners] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(`${API_URL}/products/`)\r\n            .then(function (result) {\r\n                const products = result.data.product;\r\n                console.log(products);\r\n                setProducts(products);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n\r\n        axios.get(`${API_URL}/banners`)\r\n            .then((result) => {\r\n                const banners = result.data.banners;\r\n                setBanners(banners);\r\n            }).catch((error) => {\r\n                console.error(\"에러발생!\", error);\r\n            })\r\n    }, []);\r\n    return (\r\n        <div>\r\n\r\n            <section>\r\n                <Carousel autoplay={true} autoplaySpeed={3000}>\r\n                    {banners.map((banner, index) => {\r\n                        return (\r\n                            <Link to={banner.href}>\r\n                                <div id=\"visual\">\r\n                                    <img src={`${API_URL}/${banner.imageUrl}`} alt=\"배너이미지\" />\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </Carousel>\r\n                <div id=\"products\" className=\"inner\">\r\n                    <h2>최신상품</h2>\r\n                    <div id=\"product-list\">\r\n                        {\r\n                            products.map((product, index) => {\r\n                                return (\r\n                                    <div className=\"product-card\" key={product.id}>\r\n                                        <Link to={`/product/${product.id}`}>\r\n                                            <div>\r\n                                                <img src={product.imageUrl} alt=\"상품이미지\" class=\"product-img\" />\r\n                                            </div>\r\n                                            <div className=\"product-contents\">\r\n                                                <span className=\"product-name\">{product.name}</span>\r\n                                                <span className=\"product-price\">{product.price}</span>\r\n                                                <div className=\"product-seller\">\r\n                                                    <img src=\"images/icons/avatar.png\" alt=\"아이콘\" class=\"product-avatar\" />\r\n                                                    <span>{product.seller}</span>\r\n                                                </div>\r\n                                                <div>{moment(product.createdAt).format('YYYY-MM-DD')}</div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { API_URL } from '../config/constants';\r\nimport { useParams } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\nconst ProductPage = () => {\r\n    const [product, setProduct] = useState([]); //상태관리\r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        axios.get(`${API_URL}/products/${id}`)\r\n            .then(function (result) {\r\n                const product = result.data.product;\r\n                setProduct(product);\r\n                console.log(result.data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }, [])\r\n    if (product === null) {\r\n        return (\r\n            <div className='inner'>\r\n                <h1>상품 정보를 받고 있습니다.</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"inner\" id=\"detailView\">\r\n            <h1>{product.name}상품 상세페이지 입니다.</h1>\r\n            <div id=\"image-box\">\r\n                <img src={product.imageUrl} alt=\"상품이미지\" />\r\n                <div id=\"profile-box\">\r\n                    <img src=\"/images/icons/avatar.png\" alt=\"아이콘이미지\" />\r\n                    <span>{product.seller}</span>\r\n                </div>\r\n            </div>\r\n            <div id=\"contents-box\">\r\n                <div id=\"name\">{product.name}</div>\r\n                <div>{product.price}원</div>\r\n                <div>2021-07-13</div>\r\n                <div>{product.description}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductPage;","import React, { useState } from 'react';\r\nimport { Form, Button, Input, Upload } from 'antd';\r\nimport './index.scss';\r\nimport { API_URL } from '../config/constants';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst UploadPage = () => {\r\n    const history = useHistory();\r\n    const onSubmit = (values) => {\r\n        //서버로 데이터 전송하기\r\n        axios.post(`${API_URL}/products`, {\r\n            name: values.name,\r\n            description: values.description,\r\n            seller: values.seller,\r\n            price: parseInt(values.price),\r\n            imageUrl: API_URL + '/' + imageUrl\r\n        }).then((result) => {\r\n            console.log(result);\r\n            history.replace('/');\r\n        })\r\n    }\r\n    //이미지 경로 상태 추가하기\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    //이미지 처리 함수\r\n    const onChangeImage = (info) => {\r\n        //파일이 업로드 중일 때\r\n        if (info.file.status === 'uploading') {\r\n            return;\r\n        }\r\n        //파일 업로드가 완료되었을 때\r\n        if (info.file.status === 'done') {\r\n            const response = info.file.response;\r\n            const imageUrl = response.imageUrl;\r\n            //받은 이미지경로를 imageUrl로 넣어줌\r\n            setImageUrl(imageUrl);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"inner\" id=\"upload-container\">\r\n            <h1>제품 등록</h1>\r\n            <Form name=\"product-upload\" onFinish={onSubmit}>\r\n                <Form.Item name=\"upload\"\r\n                    label={<div className=\"upload-label\">상품사진</div>}\r\n                >\r\n                    <Upload name=\"image\"\r\n                        action={`${API_URL}/image`}\r\n                        listType=\"picture\"\r\n                        //다른 이미지를 보여주는 속성 제거\r\n                        showUploadList={false}\r\n                        onChange={onChangeImage}\r\n                    >\r\n                        {/* 삼항연산자 사용. 이미지가 있으면 이미지를 나타내고 없으면\r\n                    이미지를 업로드 해주세요가 나타남 */}\r\n                        {\r\n                            imageUrl ? (<img src={`${API_URL}/${imageUrl}`} alt=\"업로드이미지\" />) :\r\n                                (<div id=\"upload-img-placeholder\">\r\n                                    <img src=\"/images/icons/camera.png\" alt=\"업로드\" />\r\n                                    <span>이미지를 업로드 해 주세요.</span>\r\n                                </div>)\r\n                        }\r\n\r\n\r\n                    </Upload>\r\n                </Form.Item>\r\n                <Form.Item name=\"seller\"\r\n                    label={<div className=\"upload-label\">판매자 명</div>}\r\n                    rules={[{\r\n                        required: true, message: \"판매자 이름을 입력하세요.\"\r\n                    }]}\r\n                >\r\n                    <Input className=\"upload-name\"\r\n                        size=\"large\"\r\n                        placeholder=\"이름을 입력해주세요.\"\r\n                    />\r\n\r\n                </Form.Item>\r\n                <Form.Item name=\"name\"\r\n                    label={<div className=\"upload-label\">상품이름</div>}\r\n                    rules={[{ required: true, message: \"상품 이름을 입력해주세요.\" }]}\r\n                >\r\n                    <Input className=\"upload-name\"\r\n                        size=\"large\"\r\n                        placeholder=\"상품 이름을 입력해주세요.\" />\r\n                </Form.Item>\r\n                <Form.Item name=\"price\"\r\n                    label={<div className=\"upload-label\">상품가격</div>}\r\n                    rules={[{ required: true, message: \"상품 가격을 입력해주세요.\" }]}\r\n                >\r\n                    <Input className=\"upload-price\"\r\n                        size=\"large\"\r\n                        placeholder=\"상품 가격을 입력해주세요.\" />\r\n                </Form.Item>\r\n                <Form.Item name=\"description\"\r\n                    label={<div className=\"upload-label\">상품소개</div>}\r\n                    rules={[{ required: true, message: \"상품 소개를 입력해주세요.\" }]}\r\n                >\r\n                    <Input.TextArea\r\n                        size=\"large\"\r\n                        id=\"product-description\"\r\n                        placeholder=\"상품 소개를 입력해주세요.\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button id=\"submit-button\" size=\"large\" htmlType=\"submit\">상품 등록하기</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadPage;\r\n","import { Button } from 'antd';\r\nimport React from 'react';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n//useHistory : Link처럼 다른 경로로 이동시켜줌\r\n\r\nconst Header = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <header className=\"inner\">\r\n            <div>\r\n                <h1>\r\n                    <Link to={'/'}><img src=\"/images/icons/logo.png\" alt=\"그랩마켓\" /></Link>\r\n                </h1>\r\n            </div>\r\n            <Button size=\"large\" onClick={() => {\r\n                //다른 경로로 이동\r\n                history.push('/upload');\r\n            }} icon={<DownloadOutlined />}>\r\n                상품 업로드\r\n            </Button>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <h1>그린조명</h1>\r\n            <address>울산시 남구 삼산동 KM빌딩</address>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import './App.css';\nimport MainPage from './main';\nimport { Switch, Route } from 'react-router-dom';\nimport ProductPage from './product';\nimport UploadPage from './upload';\nimport Header from './include/header';\nimport Footer from './include/footer';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route path={\"/\"} exact={true}>\n          <MainPage />\n        </Route>\n        <Route path={\"/product/:id\"} exact={true}>\n          <ProductPage />\n        </Route>\n        <Route path={\"/upload\"} exact={true}>\n          <UploadPage />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}